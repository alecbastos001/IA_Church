{"version":3,"sources":["App.js","index.js"],"names":["App","transcript","setTranscript","useState","isRecording","setIsRecording","_jsxs","children","_jsx","onClick","handleStopRecording","window","webkitSpeechRecognition","stop","handleStartRecording","alert","recognition","continuous","interimResults","lang","start","onresult","event","finalTranscript","i","resultIndex","results","length","onerror","console","error","onend","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"sLAkEeA,MAhEf,WACE,MAAOC,EAAYC,GAAiBC,mBAAS,KACtCC,EAAaC,GAAkBF,oBAAS,GAiD/C,OACEG,eAAA,OAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,wCACFH,EAGAI,cAAA,UAAQC,QAbcC,KACtBC,OAAOC,0BACTD,OAAOC,wBAAwBC,OAC/BR,GAAe,GACjB,EASyCE,SAAC,yBAFtCC,cAAA,UAAQC,QAlDeK,KAE3B,KAAM,4BAA6BH,QAEjC,YADAI,MAAM,+DAKR,MAAMC,EAAc,IAAIL,OAAOC,wBAC/BI,EAAYC,YAAa,EACzBD,EAAYE,gBAAiB,EAC7BF,EAAYG,KAAO,QAGnBH,EAAYI,QACZf,GAAe,GAGfW,EAAYK,SAAYC,IACtB,IAAIC,EAAkB,GACtB,IAAK,IAAIC,EAAIF,EAAMG,YAAaD,EAAIF,EAAMI,QAAQC,OAAQH,IACxDD,GAAmBD,EAAMI,QAAQF,GAAG,GAAGvB,WAEzCC,EAAcqB,EAAgB,EAIhCP,EAAYY,QAAWN,IACrBO,QAAQC,MAAM,iCAAkCR,EAAMQ,OACtDzB,GAAe,EAAM,EAIvBW,EAAYe,MAAQ,KAClB1B,GAAe,EAAM,CACtB,EAeyCE,SAAC,2BAIzCD,eAAA,KAAAC,SAAA,CAAG,sBAAcN,KAAe,MAGtC,EC3Da+B,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH5B,cAAC6B,IAAMC,WAAU,CAAA/B,SACfC,cAACR,EAAG,M","file":"static/js/main.469abf07.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction App() {\r\n  const [transcript, setTranscript] = useState(''); // Para armazenar a transcrição\r\n  const [isRecording, setIsRecording] = useState(false); // Para controlar o estado de gravação\r\n\r\n  // Função para iniciar a gravação e reconhecimento de voz\r\n  const handleStartRecording = () => {\r\n    // Verifica se o navegador suporta a API de reconhecimento de voz\r\n    if (!('webkitSpeechRecognition' in window)) {\r\n      alert('API de reconhecimento de voz não suportada no navegador.');\r\n      return;\r\n    }\r\n\r\n    // Instancia o reconhecimento de voz\r\n    const recognition = new window.webkitSpeechRecognition();\r\n    recognition.continuous = true; // Continuar ouvindo até o stop\r\n    recognition.interimResults = true; // Mostrar resultados parciais (opcional)\r\n    recognition.lang = 'pt-BR'; // Definir o idioma (português Brasil)\r\n\r\n    // Iniciar o reconhecimento de voz\r\n    recognition.start();\r\n    setIsRecording(true);\r\n\r\n    // Manipula os resultados da gravação (transcrição)\r\n    recognition.onresult = (event) => {\r\n      let finalTranscript = '';\r\n      for (let i = event.resultIndex; i < event.results.length; i++) {\r\n        finalTranscript += event.results[i][0].transcript; // Pega o texto transcrito\r\n      }\r\n      setTranscript(finalTranscript); // Atualiza o estado com a transcrição\r\n    };\r\n\r\n    // Se ocorrer erro no reconhecimento de voz\r\n    recognition.onerror = (event) => {\r\n      console.error('Erro de reconhecimento de voz:', event.error);\r\n      setIsRecording(false); // Parar gravação em caso de erro\r\n    };\r\n\r\n    // Quando o reconhecimento de voz para automaticamente\r\n    recognition.onend = () => {\r\n      setIsRecording(false); // Atualiza o estado para parar a gravação\r\n    };\r\n  };\r\n\r\n  // Função para parar a gravação\r\n  const handleStopRecording = () => {\r\n    if (window.webkitSpeechRecognition) {\r\n      window.webkitSpeechRecognition.stop(); // Para a gravação\r\n      setIsRecording(false); // Atualiza o estado\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Legendas Automáticas para Igreja</h1>\r\n      {!isRecording ? (\r\n        <button onClick={handleStartRecording}>Iniciar Gravação</button>\r\n      ) : (\r\n        <button onClick={handleStopRecording}>Parar Gravação</button>\r\n      )}\r\n      <p>Transcrição: {transcript}</p> {/* Exibe a transcrição em tempo real */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}